(ns cve-lookup.save
  (:require [clojure.data.json :as json]
            [cve-lookup.db.repository :as repo]
            [cve-lookup.db.database :as db]
            [clj-postgresql.types :as tp]
            [cve-lookup.utils :as u]))


;(def nvd-nist-gov "https://nvd.nist.gov/vuln/data-feeds#JSON_FEED")
;(def dir "/Users/andriishevchun/Test_projects/cve_lookup/resources/downloads/nvdcve-1.1-recent.json")

(defn insert-into-db
  [line dbspec]
  (let [id (get-in line [:cve :CVE_data_meta :ID])
        description (get (first (get-in line [:cve :description :description_data])) :value)
        reference-urls (tp/map->parameter (get-in line [:cve :references :reference_data]) :json)
        impact-score (get-in line [:impact :baseMetricV2 :impactScore])
        severity (get-in line [:impact :baseMetricV2 :severity])
        published-date (get-in line [:publishedDate])
        last-modified-date (get-in line [:lastModifiedDate])
        meta-file (tp/map->parameter line :json)]

    (repo/insert-look-up dbspec {:id               id
                                 :description      description
                                 :reference_urls   reference-urls
                                 :impact_score     impact-score
                                 :severity         severity
                                 :publishedDate    published-date
                                 :lastModifiedDate last-modified-date
                                 :meta_file        meta-file})))

(defn read-and-save-file
  [file-path]
  (let [lines (get-in (json/read-str (slurp file-path)
                                     :key-fn
                                     keyword)
                      [:CVE_Items])]

    (doseq [line lines]
      (insert-into-db line
                      db/dbspec))))

;future -- функция для паралельности